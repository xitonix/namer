name: Release
env:
  BINARY: namer
on:
  release:
   types: [published]
jobs:
  unix:
    name: Unix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macOS-latest]
    steps:
    - name: Set up Go
      uses: actions/setup-go@v2.1.2
      with:
        go-version: 1.15
    - name: Check out code
      uses: actions/checkout@v2
    - name: Download dependencies
      run: go mod download -x
      env:
        GO111MODULE: on
    - name: Package release
      run: release/release.bash
      env:
        GO111MODULE: on
      id: package
    - name: Upload binary
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./${{ steps.package.outputs.file }}
        asset_name: ${{ steps.package.outputs.file }}
        asset_content_type: application/gzip
  windows:
    name: Windows
    runs-on: windows-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2.1.2
        with:
          go-version: 1.15
      - name: Check out code
        uses: actions/checkout@v2
      - name: Download dependencies
        run: go mod download -x
        env:
          GO111MODULE: on
      - name: Package release
        run: .\windows\release.ps1 -version ($Env:GITHUB_REF).trimstart('refs/tags/v')
        working-directory: .\release\windows
        id: package
        env:
          GO111MODULE: on
      - name: Upload binary
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: .\release\msi\${{ steps.package.outputs.file }}
          asset_name: ${{ steps.package.outputs.file }}
          asset_content_type: application/gzip
